<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.0/font/bootstrap-icons.css">

    <script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@17.3.1/dist/lazyload.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


    <style type="text/css">
        progress {
            -webkit-appearance: progress-bar;
            box-sizing: border-box;
            display: inline-block;
            height: 1em;
            width: 10em;
            vertical-align: -0.2em;
        }

        progress[value] {
            -webkit-appearance: none;
            appearance: none;
            width: 500px;
            height: 40px;
        }

        progress[value]::-webkit-progress-bar {
            background-color: #eee;
            border-radius: 2px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
        }

        progress[value]::-webkit-progress-value {
            background-image:
                -webkit-linear-gradient(-45deg,
                    transparent 33%, rgba(0, 0, 0, .1) 33%,
                    rgba(0, 0, 0, .1) 66%, transparent 66%),
                -webkit-linear-gradient(top,
                    rgba(255, 255, 255, .25),
                    rgba(0, 0, 0, .25)),
                -webkit-linear-gradient(left, #09c, #f44);

            border-radius: 2px;
            background-size: 35px 20px, 100% 100%, 100% 100%;
        }

        .drop-zone {
            max-width: 500px;
            height: 300px;
            padding: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            font-family: "Quicksand", sans-serif;
            font-weight: 500;
            font-size: 20px;
            cursor: pointer;
            color: #cccccc;
            border: 4px dashed #0099ff;
            border-radius: 10px;
        }

        .drop-zone--over {
            border: 4px dashed #0099ff;
            opacity: 0.6;
        }

        .drop-zone__input {
            display: none;
        }

        .drop-zone__thumb {
            width: 100%;
            height: 100%;
            border-radius: 10px;
            overflow: hidden;
            background-color: #cccccc;
            background-size: cover;
            position: relative;

        }

        .drop-zone__thumb::after {
            content: attr(data-label);
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            padding: 5px 0;
            color: #ffffff;
            background: rgba(0, 0, 0, 0.75);
            font-size: 14px;
            text-align: center;
        }
    </style>


</head>

<body>
    <%- include('partials/sidebar'); %>

    <h1>Edit Inventory</h1>
    <% items.forEach((datas)=> { %>

        <script>
            function back() {
                location.href = '/detail?_id=<%=datas._id%>'
            }
        </script>
        <form action="/edit" method="POST" enctype="multipart/form-data" class="form-control">
            <input type="hidden" name="_id" value="<%=datas._id%>">
            <div class="form-group mb-2">
            <label for="name">Name</label>
            <input type="text" name="name" value="<%=datas.name%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="type">Type</label>
            <input type="text" name="type" value="<%=datas.type%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="qty">Quantity</label>
            <input type="number" name="qty" value="<%=datas.quantity%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="street">Street</label>
            <input type="text" name="street" value="<%=datas.inventory_address.street%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="buliding">Building</label>
            <input type="text" name="buliding" value="<%=datas.inventory_address.bg%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="country">Country</label>
            <input type="text" name="country" value="<%=datas.inventory_address.country%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="zipcode">Zipcode</label>
            <input type="text" name="zipcode" value="<%=datas.inventory_address.zipcode%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="latitude">GPS Latitude</label>
            <input type="text" name="latitude" value="<%=datas.inventory_address.coord.latitude%>" class="form-control w-50">
            </div>
            <br>
            <div class="form-group mb-2">
            <label for="longitude">GPS Longitude</label>
            <input type="text" name="longitude" value="<%=datas.inventory_address.coord.longitude%>" class="form-control w-50">
            </div>
            <br>
            <p>
            <h2>Before </h2><img src="data:image/<%=datas.img.contentType%>;base64,
            <%=datas.img.data.toString('base64')%>"></p><br>
            <label class="col-form-label">Image</label>
            <div class="drop-zone">
                <span class="drop-zone__prompt">Drop file here or click to upload</span>
                <input class="drop-zone__input" type="file" name="filetoupload" id="filetoupload"
                    onchange="upload()"><br>
            </div><br>
            <progress id="progressBar" value="0" max="100"></progress>
            <div class="status" id="status"></div>
            <p id="loadedtotal"></p>
            <br><br>
            <input type="submit" value="Update" class="btn btn-primary mb-2">
        </form>
        <br>
        <button onclick="back()" class="btn btn-secondary">Back</button>

    </div>
</div>
        <% }) %>

            <script>
                function _(el) {
                    return document.getElementById(el);
                }

                function upload() {
                    var file = _("filetoupload").files[0];
                    var formdata = new FormData();
                    formdata.append("file", file);
                    var ajax = new XMLHttpRequest();
                    ajax.upload.addEventListener("progress", progressHandler, false);
                    ajax.addEventListener("load", completeHandler, false);
                    ajax.addEventListener("error", errorHandler, false);
                    ajax.addEventListener("abort", abortHandler, false);
                    ajax.open("POST", "VieoUploadSuccessful");
                    ajax.send(formdata);
                }

                function progressHandler(event) {
                    _("loadedtotal").innerHTML = "Uploaded " + event.loaded + " bytes of " + event.total;
                    var percent = (event.loaded / event.total) * 100;
                    _("progressBar").value = Math.round(percent);
                    _("status").innerHTML = Math.round(percent) + "% uploaded... please wait";
                }

                function completeHandler(event) {
                    _("status").innerHTML = "Upload completed";
                }

                function errorHandler(event) {
                    _("status").innerHTML = "Upload Failed";
                }

                function abortHandler(event) {
                    _("status").innerHTML = "Upload Aborted";
                }

                document.querySelectorAll(".drop-zone__input").forEach((inputElement) => {
                    const dropZoneElement = inputElement.closest(".drop-zone");

                    dropZoneElement.addEventListener("click", (e) => {
                        inputElement.click();
                    });

                    inputElement.addEventListener("change", (e) => {
                        if (inputElement.files.length) {
                            updateThumbnail(dropZoneElement, inputElement.files[0]);
                        }
                    });

                    dropZoneElement.addEventListener("dragover", (e) => {
                        e.preventDefault();
                        dropZoneElement.classList.add("drop-zone--over");
                    });

                    ["dragleave", "dragend"].forEach((type) => {
                        dropZoneElement.addEventListener(type, (e) => {
                            dropZoneElement.classList.remove("drop-zone--over");
                        });
                    });

                    dropZoneElement.addEventListener("drop", (e) => {
                        e.preventDefault();

                        if (e.dataTransfer.files.length) {
                            inputElement.files = e.dataTransfer.files;
                            updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);
                            upload();
                        }

                        dropZoneElement.classList.remove("drop-zone--over");
                    });
                });

                function updateThumbnail(dropZoneElement, file) {
                    let thumbnailElement = dropZoneElement.querySelector(".drop-zone__thumb");

                    // First time - remove the prompt
                    if (dropZoneElement.querySelector(".drop-zone__prompt")) {
                        dropZoneElement.querySelector(".drop-zone__prompt").remove();
                    }

                    // First time - there is no thumbnail element, so lets create it
                    if (!thumbnailElement) {
                        thumbnailElement = document.createElement("div");
                        thumbnailElement.classList.add("drop-zone__thumb");
                        dropZoneElement.appendChild(thumbnailElement);
                    }

                    thumbnailElement.dataset.label = file.name;

                    // Show thumbnail for image files
                    if (file.type.startsWith("image/")) {
                        const reader = new FileReader();

                        reader.readAsDataURL(file);
                        reader.onload = () => {
                            thumbnailElement.style.backgroundImage = `url('${reader.result}')`;
                        };
                    } else {
                        thumbnailElement.style.backgroundImage = null;
                    }
                }
            </script>
</body>

</html>